// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       Int
  description String?
  isbn        String?
  image       String?   // รูปภาพหลัก (เก็บไว้เพื่อความเข้ากันได้กับโค้ดเดิม)
  images      String[]  // รายการรูปภาพทั้งหมด (สูงสุด 10 รูป)
  category    String?
  stock       Int       @default(0)  // จำนวนสินค้าคงเหลือ
  viewCount   Int       @default(0)  // จำนวนการเข้าชมสินค้า
  salesCount  Int       @default(0)  // จำนวนการขายสินค้า
  rating      Float     @default(0)  // คะแนนความนิยม (0-5)
  carts       Cart[]    // 1 เล่มอยู่ได้หลายตะกร้า one to many
  OrderDetail OrderDetail[]
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
}

model Category {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
}


model Admin {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  username  String    @unique
  password  String
  role      String    @default("admin") // admin, user
  status    String    @default("active") // active, inactive
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model Member {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  phone     String
  email     String?
  username  String    @unique
  password  String
  address   String?
  status    String    @default("active") // active, inactive
  Orders    Order[]
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model Cart {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  memberId    String
  productId String @db.ObjectId // เพิ่มเป็น ObjectId
  qty Int
  product Product @relation(fields: [productId], references: [id]) // 1 ตะกร้ามี 1 เล่ม many to one
}

model Order {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    memberId String @db.ObjectId
    orderNo String @default("")
    slipImage String
    status String @default("") // cancel, paid, transfer
    trackCode String @default("")
    express String @default("")
    remark String @default("")
    customerName String 
    customerPhone String 
    customerAddress String
    OrderDetail OrderDetail[]
    createdAt DateTime
    Member Member @relation(fields: [memberId], references: [id])
}

model OrderDetail {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    productId String @db.ObjectId
    Product Product @relation(fields: [productId], references: [id])
    price Int
    qty Int
    orderId String @db.ObjectId
    Order Order @relation(fields: [orderId], references: [id])
}
